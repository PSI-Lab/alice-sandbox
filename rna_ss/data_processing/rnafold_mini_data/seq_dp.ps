%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.11
%%CreationDate: Wed Aug 28 22:16:06 2019
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%%BeginProlog
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def
end
%EndProlog

DPdict begin

/DPtitle {
  (seq)
} def

/sequence { (\
AGGCACGAAGCGACUUUAGGGUGCAAUAUGCGACUUUGGCACGUGGAUUU\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.011887752 ubox
1 16 0.006296921 ubox
1 27 0.009185790 ubox
1 44 0.013913320 ubox
1 48 0.140977345 ubox
1 49 0.078876360 ubox
1 50 0.049039341 ubox
2 6 0.008442052 ubox
2 11 0.012045733 ubox
2 14 0.013687902 ubox
2 15 0.010384776 ubox
2 24 0.007690852 ubox
2 27 0.003776525 ubox
2 40 0.012796510 ubox
2 42 0.114860543 ubox
2 48 0.105060365 ubox
2 49 0.066570412 ubox
2 50 0.020932983 ubox
3 11 0.102453750 ubox
3 14 0.010673550 ubox
3 24 0.152961408 ubox
3 31 0.026062106 ubox
3 40 0.204074319 ubox
3 42 0.008995280 ubox
3 44 0.006288224 ubox
3 48 0.058100081 ubox
3 49 0.026551727 ubox
3 50 0.011415674 ubox
4 10 0.103026399 ubox
4 12 0.010188485 ubox
4 20 0.008276684 ubox
4 21 0.003163181 ubox
4 23 0.153450394 ubox
4 30 0.026172139 ubox
4 38 0.008653545 ubox
4 39 0.204323124 ubox
4 43 0.006409711 ubox
4 45 0.930162036 ubox
4 46 0.046378243 ubox
5 22 0.153365687 ubox
5 29 0.025305656 ubox
5 37 0.007643204 ubox
5 44 0.933405454 ubox
5 48 0.010339108 ubox
5 49 0.013017574 ubox
5 50 0.006844509 ubox
6 10 0.007087830 ubox
6 12 0.014368338 ubox
6 19 0.007234602 ubox
6 20 0.010203492 ubox
6 21 0.152911425 ubox
6 38 0.204636780 ubox
6 43 0.933801987 ubox
6 45 0.032527530 ubox
6 46 0.030530646 ubox
7 11 0.014036906 ubox
7 14 0.008451344 ubox
7 16 0.009874040 ubox
7 17 0.094037846 ubox
7 27 0.006813778 ubox
7 37 0.205511942 ubox
7 40 0.004566125 ubox
7 42 0.925056592 ubox
7 44 0.019738152 ubox
7 48 0.011715293 ubox
7 49 0.025494362 ubox
7 50 0.101194895 ubox
8 15 0.011602901 ubox
8 16 0.102215912 ubox
8 17 0.025662069 ubox
8 27 0.006820768 ubox
8 36 0.205814285 ubox
8 37 0.003316498 ubox
8 44 0.016879651 ubox
8 48 0.026059521 ubox
8 49 0.111920562 ubox
8 50 0.044243232 ubox
9 15 0.106302708 ubox
9 16 0.027939818 ubox
9 17 0.012563331 ubox
9 22 0.007757836 ubox
9 27 0.005110078 ubox
9 35 0.205552225 ubox
9 44 0.007278603 ubox
9 48 0.092090528 ubox
9 49 0.051767364 ubox
9 50 0.005306497 ubox
10 14 0.104506465 ubox
10 15 0.021337276 ubox
10 16 0.013204510 ubox
10 17 0.016308611 ubox
10 22 0.006166952 ubox
10 24 0.143937159 ubox
10 31 0.006413652 ubox
10 34 0.205269688 ubox
10 37 0.004260714 ubox
10 40 0.882347930 ubox
10 42 0.038503690 ubox
10 44 0.115604413 ubox
10 48 0.053505004 ubox
10 49 0.005237638 ubox
11 19 0.015701337 ubox
11 20 0.027147088 ubox
11 21 0.009001206 ubox
11 23 0.144038792 ubox
11 30 0.006874877 ubox
11 32 0.199358442 ubox
11 38 0.202868079 ubox
11 39 0.880599633 ubox
11 43 0.121612024 ubox
11 45 0.027642343 ubox
11 46 0.167497573 ubox
12 16 0.007408443 ubox
12 17 0.008507907 ubox
12 22 0.089728380 ubox
12 24 0.009583775 ubox
12 29 0.005881200 ubox
12 31 0.195758739 ubox
12 36 0.007721345 ubox
12 37 0.202300121 ubox
12 40 0.102225697 ubox
12 42 0.121756081 ubox
12 44 0.024329388 ubox
12 49 0.009991810 ubox
12 50 0.011527927 ubox
13 17 0.005578764 ubox
13 22 0.116155371 ubox
13 29 0.027551853 ubox
13 35 0.006209498 ubox
13 36 0.181785321 ubox
13 37 0.569407856 ubox
13 44 0.176135723 ubox
13 48 0.010492098 ubox
13 49 0.012585630 ubox
13 50 0.005221426 ubox
14 19 0.022085426 ubox
14 20 0.079198560 ubox
14 21 0.136854268 ubox
14 23 0.007644185 ubox
14 30 0.123313535 ubox
14 32 0.005471157 ubox
14 38 0.090364208 ubox
14 39 0.113822074 ubox
14 43 0.177007930 ubox
14 45 0.005638266 ubox
14 46 0.017679727 ubox
15 19 0.071523239 ubox
15 20 0.126578181 ubox
15 21 0.003690977 ubox
15 26 0.015588402 ubox
15 28 0.046705025 ubox
15 30 0.010940549 ubox
15 33 0.008073103 ubox
15 38 0.114054805 ubox
15 39 0.026985234 ubox
15 41 0.071408867 ubox
15 45 0.017566912 ubox
15 46 0.004141701 ubox
15 47 0.027922689 ubox
16 20 0.005129793 ubox
16 23 0.003997125 ubox
16 25 0.015944108 ubox
16 26 0.054741701 ubox
16 28 0.029824995 ubox
16 30 0.003707027 ubox
16 32 0.007107348 ubox
16 33 0.020095935 ubox
16 38 0.068757919 ubox
16 39 0.237554074 ubox
16 41 0.024770361 ubox
16 45 0.004289845 ubox
16 46 0.029563114 ubox
16 47 0.023654293 ubox
17 23 0.006369921 ubox
17 25 0.054948641 ubox
17 26 0.054735110 ubox
17 28 0.094056656 ubox
17 30 0.007614614 ubox
17 32 0.017730408 ubox
17 33 0.013183808 ubox
17 38 0.623821172 ubox
17 39 0.009457937 ubox
17 41 0.003169047 ubox
17 45 0.027936646 ubox
17 46 0.021928852 ubox
17 47 0.003938501 ubox
18 22 0.005768206 ubox
18 27 0.095509801 ubox
18 29 0.008309134 ubox
18 35 0.159091117 ubox
18 36 0.539578619 ubox
18 37 0.638004106 ubox
18 44 0.027111674 ubox
19 24 0.115144286 ubox
19 27 0.006981805 ubox
19 31 0.074787081 ubox
19 34 0.161159016 ubox
19 35 0.571509399 ubox
19 36 0.721106605 ubox
19 37 0.006141137 ubox
19 44 0.034367768 ubox
19 50 0.022330918 ubox
20 24 0.031638195 ubox
20 27 0.012001078 ubox
20 29 0.005765513 ubox
20 31 0.006681691 ubox
20 34 0.573053644 ubox
20 35 0.734997181 ubox
20 36 0.010299023 ubox
20 42 0.016900531 ubox
20 49 0.030466954 ubox
21 27 0.007146077 ubox
21 29 0.074982310 ubox
21 31 0.015876028 ubox
21 34 0.736880351 ubox
21 35 0.005184831 ubox
21 40 0.005675470 ubox
21 42 0.053418229 ubox
21 48 0.033880082 ubox
22 26 0.006793073 ubox
22 28 0.074761178 ubox
22 30 0.015769568 ubox
22 32 0.600220707 ubox
22 33 0.596611281 ubox
22 39 0.005382614 ubox
22 41 0.055458509 ubox
22 47 0.034195333 ubox
23 27 0.062256271 ubox
23 29 0.010373385 ubox
23 31 0.949668903 ubox
23 40 0.055668778 ubox
24 30 0.950126779 ubox
24 32 0.022221185 ubox
24 38 0.024078177 ubox
24 39 0.050813761 ubox
24 45 0.034583447 ubox
24 46 0.006774615 ubox
25 29 0.770018022 ubox
25 36 0.006434316 ubox
25 37 0.032894240 ubox
25 44 0.029931224 ubox
25 48 0.004319022 ubox
25 49 0.023668890 ubox
25 50 0.005234966 ubox
26 35 0.007376539 ubox
26 36 0.033225250 ubox
26 37 0.015411672 ubox
26 44 0.095526367 ubox
26 48 0.026490772 ubox
26 49 0.005828123 ubox
26 50 0.004245309 ubox
27 38 0.013505208 ubox
27 43 0.096606535 ubox
27 45 0.027577050 ubox
27 47 0.025954440 ubox
28 35 0.016948467 ubox
28 36 0.008205178 ubox
28 37 0.015422048 ubox
28 44 0.030795181 ubox
28 48 0.013282220 ubox
28 49 0.014038789 ubox
29 33 0.006418676 ubox
29 41 0.183455953 ubox
29 43 0.028842968 ubox
29 45 0.019806028 ubox
29 47 0.014367383 ubox
30 34 0.010860129 ubox
30 35 0.004167294 ubox
30 40 0.203818796 ubox
30 42 0.027530700 ubox
30 44 0.033403565 ubox
30 48 0.003925197 ubox
31 38 0.013188302 ubox
31 39 0.203599513 ubox
31 43 0.033819833 ubox
31 45 0.010875096 ubox
31 46 0.036349337 ubox
32 37 0.012753203 ubox
32 40 0.027229458 ubox
32 42 0.033428002 ubox
32 44 0.006709545 ubox
33 37 0.088312111 ubox
33 44 0.038697399 ubox
34 38 0.009027065 ubox
34 39 0.028649512 ubox
34 43 0.039322807 ubox
34 46 0.006614629 ubox
35 41 0.003385457 ubox
35 45 0.006562615 ubox
35 47 0.003889910 ubox
36 41 0.004972395 ubox
36 46 0.004152888 ubox
36 47 0.003997352 ubox
37 43 0.004884454 ubox
37 45 0.004145072 ubox
37 46 0.004346601 ubox
38 42 0.005285536 ubox
38 44 0.003941835 ubox
40 45 0.009812119 ubox
40 46 0.007739440 ubox
42 46 0.006800016 ubox
43 48 0.003174802 ubox
43 49 0.006015524 ubox
43 50 0.006009582 ubox
45 50 0.003818666 ubox
46 50 0.007391518 ubox
4 45 0.9500000 lbox
5 44 0.9500000 lbox
6 43 0.9500000 lbox
7 42 0.9500000 lbox
10 40 0.9500000 lbox
11 39 0.9500000 lbox
17 38 0.9500000 lbox
18 37 0.9500000 lbox
19 36 0.9500000 lbox
20 35 0.9500000 lbox
21 34 0.9500000 lbox
22 33 0.9500000 lbox
23 31 0.9500000 lbox
24 30 0.9500000 lbox
25 29 0.9500000 lbox
showpage
end
%%EOF
